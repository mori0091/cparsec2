# -*- coding: utf-8-unix -*-
#+STARTUP: showall indent

* How to build each subproject individually

- [[#how-to-build-cparsec2-library][How to build CPARSEC2 library]]
- [[#how-to-build-andor-run-unit-tests][How to build and/or run unit-tests]]

** How to build CPARSEC2 library
:PROPERTIES:
:CUSTOM_ID: how-to-build-cparsec2-library
:END:

In this project, using GNU make command to build and test.\\
Run =make= command as follows. (e.g. type =make= =Enter= at command-line)

To build all: (=bin/cparsec2=, =lib/libcparsec2.a=)
#+begin_src shell
# at the top of project directory
make
#+end_src

To build executable file only: (=bin/cparsec2=)
#+begin_src shell
# at the top of project directory
make build
#+end_src

To build archive file (i.e. library) only: (=lib/libcparsec2.a=)
#+begin_src shell
# at the top of project directory
make lib
#+end_src

To run sample application: (=bin/cparsec2=)
#+begin_src shell
# at the top of project directory
make test
#+end_src

To cleanup:
#+begin_src shell
# at the top of project directory
make clean
#+end_src


** How to build and/or run unit-tests
:PROPERTIES:
:CUSTOM_ID: how-to-build-andor-run-unit-tests
:END:

This project uses [[https://github.com/catchorg/Catch2][Catch2]] - A modern, C++-native, header-only, test framework for
unit-tests.

All unit-tests can be built and/or ran by GNU make command.

To build unit-tests: (=test/tests=)
#+begin_src shell
# at the top of project directory
make -C test
# or at the 'test' directory
cd test
make
#+end_src

To run unit-tests: (=test/tests=)
#+begin_src shell
# at the top of project directory
make test -C test
# or at the 'test' directory
cd test
make test
#+end_src

To cleanup unit-tests:
#+begin_src shell
# at the top of project directory
make clean -C test
# or at the 'test' directory
cd test
make clean
#+end_src
