# -*- coding: utf-8-unix -*-
#+STARTUP: showall indent

* CPARSEC2 - a parser combinator library for C language

This project is an exercise to construct *parsec* like library for C11.

** API
- cparsec2_init()       :: 
     Initialize cparsec2 library.\\
     This must be called once at first.
- parse(p, src)         :: 
     Apply parser ~p~ to text provided from ~src~, and return result.
- parseTest(p, string)  :: 
     Apply parser ~p~ to ~string~ and print result.
- PARSE_TEST(p, string) :: 
     Same as ~parseTest~ and also print ~p string~. (for debug purpose)

** CharParser
- anyChar               :: 
     A CharParser which parse any one char
- digit                 :: 
     A CharParser which parse a digit (i.e. ~0~ .. ~9~)
- lower                 :: 
     A CharParser which parse a lower-case char (i.e. ~a~ .. ~z~)
- upper                 :: 
     A CharParser which parse a upper-case char (i.e. ~A~ .. ~Z~)
- alpha                 :: 
     A CharParser which parse an alphabet char (i.e. ~a~ .. ~z~, ~A~ .. ~Z~)
- alnum                 :: 
     A CharParser which parse a digit or an alphabet char (i.e. ~0~ .. ~9~, ~a~ .. ~z~, ~A~ .. ~Z~)
- letter                :: 
     A CharParser which parse underscore or an alphabet char (i.e. ~_~, ~a~ .. ~z~, ~A~ .. ~Z~)
- char1(c)              :: 
     Create a CharParser which parse the char ~c~
- satisfy(pred)         :: 
     Create a CharParser which parse a char ~c~ satisfying ~pred(c) == true~

** StringParser
- many(p)               :: 
     Create a StringParser which parse zero or more chars.\\
     A CharParser ~p~ is used to parse for each char.
- many1(p)              :: 
     Create a StringParser which parse one or more chars.\\
     A CharParser ~p~ is used to parse for each char.
